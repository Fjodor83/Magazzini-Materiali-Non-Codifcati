@inject IJSRuntime js
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@using Microsoft.AspNetCore.Components.Authorization

<div class="@NavMenuCssClass navbar-container" @onclick="ToggleNavMenu">
    <nav class="flex-column nav-links">
        @if (isLoggedIn)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                    <span class="oi oi-home" aria-hidden="true"></span> Home
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="magazzini">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Magazzini
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="materiali">
                    <span class="oi oi-box" aria-hidden="true"></span> Materiali
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="registra-operatore">
                    <span class="oi oi-box" aria-hidden="true"></span> Registra Operatore
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="assegna-ruolo">
                    <span class="oi oi-box" aria-hidden="true"></span> Assegna Ruolo
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="missioni">
                    <span class="oi oi-box" aria-hidden="true"></span> Missioni
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="users">
                    <span class="oi oi-box" aria-hidden="true"></span> Utenti
                </NavLink>
            </div>
            <div class="nav-item px-3 logout-link">
                <NavLink class="nav-link" href="logout" @onclick="ConfirmLogout">
                    <span class="oi oi-account-logout" aria-hidden="true"></span> Logout
                </NavLink>
            </div>
        }
    </nav>

   
    
</div>

@code {
    private bool collapseNavMenu = true;
    private bool isLoggedIn = false;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        isLoggedIn = authState.User.Identity != null && authState.User.Identity.IsAuthenticated;

        AuthenticationStateProvider.AuthenticationStateChanged += UpdateLoginState;
    }

    private void UpdateLoginState(Task<AuthenticationState> task)
    {
        task.ContinueWith(async t =>
        {
            var authState = await t;
            isLoggedIn = authState.User.Identity != null && authState.User.Identity.IsAuthenticated;
            await InvokeAsync(StateHasChanged);
        });
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async Task ConfirmLogout()
    {
        bool confirmed = await js.InvokeAsync<bool>("confirm", "Sei sicuro di voler uscire?");
        if (confirmed)
        {
            NavigationManager.NavigateTo("logout");
        }
    }
}
