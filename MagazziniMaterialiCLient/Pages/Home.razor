@page "/"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@using MagazziniMaterialiCLient.Models.Entity
@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Authorization

<div class="container-fluid p-0">
    <div class="header-background">
    </div>

    <nav class="navbar navbar-expand-lg navbar-dark bg-primary mb-4">
        <div class="container">
            <a class="navbar-brand" href="/">Magazzini Materiali</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto">
                    <AuthorizeView>
                        <Authorized>
                            <li class="nav-item">
                                <span class="nav-link">Benvenuto, @context.User.FindFirst(ClaimTypes.Name)?.Value!</span>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="/logout">Logout</a>
                            </li>
                        </Authorized>
                        <NotAuthorized>
                            <li class="nav-item">
                                <a class="nav-link" href="/login">Login</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="/help">Help</a>
                            </li>
                        </NotAuthorized>
                    </AuthorizeView>
                </ul>
            </div>
        </div>
    </nav>

    <div class="container">
        <AuthorizeView>
            <Authorized>
                <div class="row mb-4">
                    <div class="col-12">
                        <div class="card">
                            <div class="card-body">
                                <h2 class="card-title">Dashboard Magazzini e Materiali</h2>
                                <p class="card-text">Benvenuto, @context.User.FindFirst(ClaimTypes.Name)?.Value! Gestisci i tuoi magazzini e materiali da qui.</p>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6 mb-4">
                        <div class="card h-100">
                            <div class="card-body">
                                <h3 class="card-title">Magazzini</h3>
                                @if (magazzini == null)
                                {
                                    <p><em>Caricamento magazzini...</em></p>
                                }
                                else if (!magazzini.Any())
                                {
                                    <p>Nessun magazzino trovato.</p>
                                }
                                else
                                {
                                    <div class="list-group">
                                        @foreach (var magazzino in magazzini)
                                        {
                                            <div class="list-group-item list-group-item-action">
                                                <div class="d-flex w-100 justify-content-between">
                                                    <h5 class="mb-1">@magazzino.NomeMagazzino</h5>
                                                    <small>@magazzino.CodiceMagazzino</small>
                                                </div>
                                                <div class="mt-2">
                                                    <button class="btn btn-sm btn-outline-info" @onclick="() => NavigateToMagazzinoDetails(magazzino.Id)">Dettagli</button>
                                                    <button class="btn btn-sm btn-outline-primary" @onclick="() => NavigateToMagazzinoEdit(magazzino.Id)">Modifica</button>
                                                    <button class="btn btn-sm btn-outline-success" @onclick="() => NavigateToRegisterMateriale(magazzino.Id)">Registra Materiale</button>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                }
                                <button class="btn btn-primary mt-3" @onclick="NavigateToCreateMagazzino">Crea Nuovo Magazzino</button>
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6 mb-4">
                        <div class="card h-100">
                            <div class="card-body">
                                <h3 class="card-title">Materiali</h3>
                                @if (materiali == null)
                                {
                                    <p><em>Caricamento materiali...</em></p>
                                }
                                else if (!materiali.Any())
                                {
                                    <p>Nessun materiale trovato.</p>
                                }
                                else
                                {
                                    <div class="row">
                                        @foreach (var materiale in materiali)
                                        {
                                            <div class="col-md-6 mb-3">
                                                <div class="card h-100">
                                                    <div class="card-body">
                                                        <h5 class="card-title">@materiale.Descrizione</h5>
                                                        <h6 class="card-subtitle mb-2 text-muted">@materiale.CodiceMateriale</h6>
                                                        @if (materiale.Immagini != null && materiale.Immagini.Any(i => i.IsPrincipale))
                                                        {
                                                            var qrCode = materiale.Immagini.First(i => i.IsPrincipale);
                                                            <img src="data:image/png;base64,@qrCode.QRCodeData" alt="QR Code" class="img-fluid mb-2" style="max-width: 100px;" />
                                                        }
                                                        <div class="mt-2">
                                                            <button class="btn btn-sm btn-outline-info" @onclick="() => NavigateToMaterialeDetails(materiale.CodiceMateriale)">Dettagli</button>
                                                            <button class="btn btn-sm btn-outline-primary" @onclick="() => NavigateToMaterialeEdit(materiale.CodiceMateriale)">Modifica</button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                }
                                <button class="btn btn-primary mt-3" @onclick="NavigateToCreateMateriale">Crea Nuovo Materiale</button>
                            </div>
                        </div>
                    </div>
                </div>
            </Authorized>

            <NotAuthorized>
                <div class="row justify-content-center">
                    <div class="col-md-6">
                        <div class="card">
                            <div class="card-body text-center">
                                <h2 class="card-title">Benvenuto in Magazzino Gessi</h2>
                                <p class="card-text">Accedi per gestire i tuoi magazzini e materiali.</p>
                                <div class="mt-4">
                                    <a href="/login" class="btn btn-primary me-2">Login</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </NotAuthorized>
        </AuthorizeView>
    </div>
</div>

@code {
    private List<Magazzino> magazzini;
    private List<Materiale> materiali;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            await LoadMagazzini();
            await LoadMateriali();
        }
    }

    private async Task LoadMagazzini()
    {
        try
        {
            magazzini = await Http.GetFromJsonAsync<List<Magazzino>>("api/Magazzino");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Errore nel caricamento dei magazzini: {ex.Message}");
        }
    }

    private async Task LoadMateriali()
    {
        try
        {
            materiali = await Http.GetFromJsonAsync<List<Materiale>>("api/Materiale");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Errore nel caricamento dei materiali: {ex.Message}");
        }
    }

    private void NavigateToMagazzinoDetails(int Id) => NavigationManager.NavigateTo($"/magazzini/details/{Id}");
    private void NavigateToMagazzinoEdit(int Id) => NavigationManager.NavigateTo($"/magazzini/edit/{Id}");
    private void NavigateToCreateMagazzino() => NavigationManager.NavigateTo("/magazzini/create");

    private void NavigateToMaterialeDetails(string codiceMateriale) => NavigationManager.NavigateTo($"/materiale/details/{codiceMateriale}");
    private void NavigateToMaterialeEdit(string codiceMateriale) => NavigationManager.NavigateTo($"/materiale/edit/{codiceMateriale}");
    private void NavigateToCreateMateriale() => NavigationManager.NavigateTo("/materiale/create");

    private void NavigateToRegisterMateriale(int magazzinoId) => NavigationManager.NavigateTo($"/magazzini/materiali/register/{magazzinoId}");
}

